x = cx + r * cos(theta),
y = cy + r * sin(theta)
)
# Create scatter plot
ggplot(df, aes(x, y)) +
geom_point(size = 0.5, alpha = 0.6, color = "#F9813A") +  # Adjust color as needed
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-hotline.png",width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the circle
# Generate random polar coordinates (radius and angle)
r <- sqrt(runif(num_points, min = 0, max = 1)) * radius_max  # Ensures even distribution
theta <- runif(num_points, min = 0, max = 2 * pi)  # Random angles
# Convert polar coordinates to Cartesian
df <- data.frame(
x = cx + r * cos(theta),
y = cy + r * sin(theta)
)
# Create scatter plot
ggplot(df, aes(x, y)) +
geom_point(size = 0.5, alpha = 0.6, color = "#ef4565") +  # Adjust color as needed
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-hotline.png",width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the circle
# Generate random polar coordinates (radius and angle)
r <- sqrt(runif(num_points, min = 0, max = 1)) * radius_max  # Ensures even distribution
theta <- runif(num_points, min = 0, max = 2 * pi)  # Random angles
# Convert polar coordinates to Cartesian
df <- data.frame(
x = cx + r * cos(theta),
y = cy + r * sin(theta)
)
# Create scatter plot
ggplot(df, aes(x, y)) +
geom_point(size = 0.5, alpha = 0.6, color = "#83c5be") +  # Adjust color as needed
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-hotline.png",width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the circle
# Generate random polar coordinates (radius and angle)
r <- sqrt(runif(num_points, min = 0, max = 1)) * radius_max  # Even distribution
theta <- runif(num_points, min = 0, max = 2 * pi)  # Random angles
# Convert polar coordinates to Cartesian
df <- data.frame(
x = cx + r * cos(theta),
y = cy + r * sin(theta),
group = "normal"  # Default color
)
# Randomly select 1,656 points to highlight
highlight_indices <- sample(1:num_points, 1656)
# Change their group label
df$group[highlight_indices] <- "highlighted"
# Create scatter plot with two colors
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#83c5be", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice.png",width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#83c5be", "highlighted" = "#e63946")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-hotline-clustered.png", width = 10, height = 6, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#gray", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "gray", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice", width = 1000/10, height = 600/10, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "gray", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("case-justice", width = 1000/10, height = 600/10, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "gray", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice", width = 1000/10, height = 600/10, dpi = 300)
rlang::last_trace()
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "gray", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice", width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "gray", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice.png", width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#d4dcda", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice.png", width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the circle
# Generate random polar coordinates (radius and angle)
r <- sqrt(runif(num_points, min = 0, max = 1)) * radius_max  # Ensures even distribution
theta <- runif(num_points, min = 0, max = 2 * pi)  # Random angles
# Convert polar coordinates to Cartesian
df <- data.frame(
x = cx + r * cos(theta),
y = cy + r * sin(theta)
)
# Create scatter plot
ggplot(df, aes(x, y)) +
geom_point(size = 0.5, alpha = 0.6, color = "#d4dcda") +  # Adjust color as needed
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-hotline.png", width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate **background dots** (same method as original full-circle plot)
r_background <- sqrt(runif(num_points, min = 0, max = 1)) * radius_max  # Even distribution
theta_background <- runif(num_points, min = 0, max = 2 * pi)  # Random angles
# Generate **highlighted dots clustered at the center**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian for both groups
df_background <- data.frame(
x = cx + r_background * cos(theta_background),
y = cy + r_background * sin(theta_background),
group = "normal"
)
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
# Combine both datasets
df <- rbind(df_background, df_highlighted)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#83c5be", "highlighted" = "#e63946")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-hotline-clustered.png", width = 10, height = 6, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates for **highlighted dots (closer to center)**
r_highlighted <- sqrt(runif(num_highlighted, min = 0, max = 0.3)) * radius_max  # Tighter cluster
theta_highlighted <- runif(num_highlighted, min = 0, max = 2 * pi)  # Random angles
# Generate random polar coordinates for **normal dots (spread out)**
r_normal <- sqrt(runif(num_points - num_highlighted, min = 0.3, max = 1)) * radius_max  # Avoid center
theta_normal <- runif(num_points - num_highlighted, min = 0, max = 2 * pi)
# Convert polar coordinates to Cartesian
df_highlighted <- data.frame(
x = cx + r_highlighted * cos(theta_highlighted),
y = cy + r_highlighted * sin(theta_highlighted),
group = "highlighted"
)
df_normal <- data.frame(
x = cx + r_normal * cos(theta_normal),
y = cy + r_normal * sin(theta_normal),
group = "normal"
)
# Combine both datasets
df <- rbind(df_highlighted, df_normal)
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#d4dcda", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice.png", width = 1000 / 100, height = 600 / 100, dpi = 300)
library(ggplot2)
setwd('~/Desktop/human-trafficking')
set.seed(42)  # Ensures reproducibility
# Define number of points
num_points <- 9014
num_highlighted <- 1656  # Number of center-highlighted dots
# Define circle center and radius
cx <- 50  # X-center
cy <- 50  # Y-center
radius_max <- 30  # Maximum radius of the full circle
# Generate random polar coordinates **for ALL dots**
r_all <- sqrt(runif(num_points, min = 0, max = 1)) * radius_max  # Even distribution
theta_all <- runif(num_points, min = 0, max = 2 * pi)  # Random angles
# Convert polar coordinates to Cartesian
df <- data.frame(
x = cx + r_all * cos(theta_all),
y = cy + r_all * sin(theta_all),
group = "normal"
)
# Select **1,656 dots closest to the center** for highlighting
df$distance <- sqrt((df$x - cx)^2 + (df$y - cy)^2)  # Calculate distance from center
highlighted_indices <- order(df$distance)[1:num_highlighted]  # Pick the closest ones
df$group[highlighted_indices] <- "highlighted"
# Create scatter plot
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 0.5, alpha = 0.6) +
scale_color_manual(values = c("normal" = "#d4dcda", "highlighted" = "#00496D")) +  # Define colors
theme_void() +  # Remove axes
theme(legend.position = "none")  # Hide legend
# Save the plot
ggsave("cases-justice.png", width = 1000 / 100, height = 600 / 100, dpi = 300)
